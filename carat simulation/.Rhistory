mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
plot(cumsum(df$Y_hat[order(df$X)]))
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 23 * df$X
df$Y0 = mu2 + base + 23 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
plot(cumsum(df$Y_hat[order(df$X)]))
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 13 * df$X
df$Y0 = mu2 + base + 3 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
plot(cumsum(df$Y_hat[order(df$X)]))
C =
plot(cumsum(df$Y_hat[order(df$X)]))
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(C)
M
length(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 13 * df$X
df$Y0 = mu2 + base + 3 * df$X
return(df)
}
## Random Walk Test
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 13 * df$X
df$Y0 = mu2 + base + 13 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 3 * df$X
df$Y0 = mu2 + base + 13 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
df$Y0 = mu2 + base + 8 * df$X
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 8 * df$X
df$Y0 = mu2 + base + 8 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N,max = 4))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 8 * df$X
df$Y0 = mu2 + base + 8 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N,max = 4))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 5 * df$X
df$Y0 = mu2 + base +11 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N,max = 4))
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N,max = 4))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 1 * df$X
df$Y0 = mu2 + base +15 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
### Simulation methods
simulateDataMa2015 <- function(N, mu1, mu2, beta1, p1, beta2, p2) {
## N: simulated sample size
## mu1: base potential outcome for treatment group
## mu1: base potential outcome for control group
## beta1: coefficient for Z1
## p1: assigenment probability for Z1 = 1
## beta2: coefficient for Z2
## p2: assigenment probability for Z1 = 1
## df: a dataframe of size N, containing Z1, Z2 and potential outcomes
df <- data.frame("Z1" = sample(c(1, 2), N, TRUE, c(p1, 1 - p1)),
"Z2" = sample(c(1, 2), N, TRUE, c(p1, 1 - p2)),
"X" = runif(N,max = 4))
error = rnorm(N)
base = beta1 * df$Z1 + beta2 * df$Z2 + error
df$Y1 = mu1 + base + 6 * df$X
df$Y0 = mu2 + base +6 * df$X
return(df)
}
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
setwd("D://tutor//ma//covariate adaptive trial//covariate-adaptive-design//carat simulation")
source("caratHelper.R")
library(carat)
## Random Walk Test
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
setwd("D://tutor//ma//covariate adaptive trial//covariate-adaptive-design//carat simulation")
source("caratHelper.R")
library(carat)
## Random Walk Test
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
setwd("D://tutor//ma//covariate adaptive trial//covariate-adaptive-design//carat simulation")
source("caratHelper.R")
library(carat)
## Random Walk Test
patients_num = 100
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
## Observed outcome
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
## remove the global treatment effect
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
## interaction effect
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
## Observed outcome
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
setwd("D://tutor//ma//covariate adaptive trial//covariate-adaptive-design//carat simulation")
source("caratHelper.R")
library(carat)
## Random Walk Test
patients_num = 100
df  = simulateDataMa2015(patients_num, 8, 5, 1, 0.5, 2, 0.3)
assignment_adaptive <- myAdjBCD(df, 1:2)$assignment
assignment_simple <- sample(c("A", "B"),patients_num ,TRUE)
df$assignment = assignment_simple
## Observed outcome
df$R_obs = 0
df$R_obs[which(df$assignment == "A")] = df$Y1[which(df$assignment == "A")]
df$R_obs[which(df$assignment == "B")] = df$Y0[which(df$assignment == "B")]
plot(df$X, df$R_obs)
mean_treatment = mean(df$R_obs[which(df$assignment=="A")])
mean_control = mean(df$R_obs[which(df$assignment=="B")])
## remove the global treatment effect
df$R_hat = 0
df$R_hat[which(df$assignment == "A")] = df$R_obs[which(df$assignment == "A")] - mean_treatment
df$R_hat[which(df$assignment == "B")] = df$R_obs[which(df$assignment == "B")] - mean_control
## interaction effect
df$Y_hat = 0
df$Y_hat[which(df$assignment == "A")] = df$R_hat[which(df$assignment == "A")]*1
df$Y_hat[which(df$assignment == "B")] = df$R_hat[which(df$assignment == "B")] * (-1)
plot(df$X,df$Y_hat)
plot(df$Y_hat[order(df$X)])
C = cumsum(df$Y_hat[order(df$X)])
plot(C)
M = max(abs(C))/sqrt(length(C) * var(C))
M
